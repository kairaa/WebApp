@using Shared.Utilities.Results.ComplexTypes
@model Entities.Dtos.Categories.CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler Index";
}
@if (Model.resultStatus == ResultStatus.Success)
{
    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>
        <div class="card-body">
            <iframe role="status" src="/gif/1479.gif" class="d-none position-absolute start-50 top-50"></iframe>
            <span class="loader d-none"></span>
            <div class="table-responsive">
                <table class="table table-bordered" id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Adı</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı Adı</th>
                            <th>Son Düzenlenme Tarihi</th>
                            <th>Son Düzenleyen Kullanıcı Adı</th>
                            <th>Makale Sayisi</th>
                            <th>Islemler</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Adı</th>
                            <th>Aktif Mi?</th>
                            <th>Silinmiş Mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı Adı</th>
                            <th>Son Düzenlenme Tarihi</th>
                            <th>Son Düzenleyen Kullanıcı Adı</th>
                            <th>Makale Sayisi</th>
                            <th>Islemler</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            if (category.Note == null || category.Note == "")
                            {
                                category.Note = "Note yok";
                            }
                            <tr name="@category.ID">
                                <td>@category.ID</td>
                                <td>@category.Name</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>@category.ModifiedDate.ToShortDateString()</td>
                                <td>@category.ModifiedByName</td>
                                <td>@category.Articles.Count</td>
                                <td>
                                    <button class="btn btn-primary btn-sm"><span class="fas fa-edit"></span>Duzenle</button>
                                    <button data-id="@category.ID"  class="btn btn-danger btn-sm btn-delete"><span class="fas fa-minus-circle"></span>Sil</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.resultStatus == ResultStatus.Error)
{
    <div class="alert alert-danger mt-3">
        @Model.Message <br />
        Dashboard sayfasına geri dönmek için lütfen <a class="alert-link" asp-area="Admin" asp-controller="Home" asp-action="Index">tıklayınız.</a>
    </div>
}
@section Scripts
{
    <script>
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "3000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        $(document).ready(function() {
            $('#categoriesTable').DataTable({
                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: "btnAdd",
                        },
                        className: 'btn btn-success',
                        action: function(e, dt, node, config) {

                        }
                    },
                    {
                        text: 'Yenile',
                        className: 'btn btn-warning',
                        action: function(e, dt, node, config) {
                            $.ajax({
                                type: 'GET',
                                url: 'Category/GetAllCategories/',
                                contentType: 'application/json',
                                beforeSend: function(){
                                    $('#categoriesTable').attr('style','opacity:0.1;user-select:none;');
                                    $('iframe').removeClass('d-none');
                                    
                                },
                                success: function(data) {
                                    const categoryListDto = jQuery.parseJSON(data);
                                    if (categoryListDto.resultStatus === 0) {                    
                                        let tableBody = '';
                                        $.each(categoryListDto.Categories.$values, function (index, category) {
                                            if (category.Note == null || category.Note == "") {
                                                category.Note = "Note yok";
                                            }
                                            if (category.Articles.$values.length == null || category.Articles.$values.length == undefined) {
                                                category.Articles.$values.length = 0;
                                            }
                                            tableBody +=
                                                `
                                                <tr>
                                <td>${category.ID}</td>
                                <td>${category.Name}</td>
                                <td>${convertFirstToUpper(category.IsActive.toString())}</td>
                                <td>${convertFirstToUpper(category.IsDeleted.toString())}</td>
                                <td>${category.Note}</td>
                                <td>${convertToShortDate(category.CreatedDate)}</td>
                                <td>${category.CreatedByName}</td>
                                <td>${convertToShortDate(category.ModifiedDate)}</td>
                                <td>${category.ModifiedByName}</td>
                                <td>${category.Articles.$values.length}</td>
                            </tr>
                                                `;
                                        });
                                        $('#categoriesTable tbody').replaceWith(tableBody);
                                        $('#categoriesTable').removeAttr('style').delay(5000);
                                        $('iframe').addClass('d-none').delay(5000);
                                    }
                                    else {
                                        toastr.error(`${categoryListDto.Message}`, 'İşlem Başarısız!');
                                    }
                                },
                                error: function(err) {
                                    console.log(err);
                                    toastr.error(`${err.statusText}`, 'İşlem Başarısız!');
                                }
                            });
                        }
                    }
                ],
                language: {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }
                }
            });
            @* DataTables ends here *@

            //Ajax get islemi
            $(function() {
                const url = '@Url.Action("Add", "Category")';
                const placeHolderDiv = $('#modalPlaceHolder');
                $('#btnAdd').click(function() {
                    $.get(url).done(function(data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });
                });
                //Ajax post islemi
                placeHolderDiv.on('click', '#btnSave', function (e) {
                    e.preventDefault();
                    const form = $('#form-category-add');
                    const actionUrl = form.attr('action');//asp-action urlsine gider
                    const dataToSend = form.serialize(); //gonderilecek veiriyi categoryadddto olarak donusturduk
                    $.post(actionUrl, dataToSend).done((data) => {
                        const ajaxAddModel = jQuery.parseJSON(data);//data model
                        const newFormBody = $('.modal-body', ajaxAddModel.CategoryAddPartial);//formun oldugu kismi alicaz
                        placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                        const isValid = newFormBody.find('[name="IsValid"]').val() === 'True';
                        if (isValid) {
                            placeHolderDiv.find('.modal').modal('hide');
                            if (ajaxAddModel.CategoryDto.Category.Note == null || ajaxAddModel.CategoryDto.Category.Note == "") {
                                ajaxAddModel.CategoryDto.Category.Note = "Note yok";
                            }
                            let tableRow ='';
                            if (ajaxAddModel.CategoryDto.Category.Articles == null) {
                                 tableRow = `
                        <tr>
                                                    <td>${ajaxAddModel.CategoryDto.Category.ID}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.Name}</td>
                                                    <td>${convertFirstToUpper(ajaxAddModel.CategoryDto.Category.IsActive.toString())}</td>
                                                    <td>${convertFirstToUpper(ajaxAddModel.CategoryDto.Category.IsDeleted.toString())}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.Note}</td>
                                                    <td>${convertToShortDate(ajaxAddModel.CategoryDto.Category.CreatedDate)}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.CreatedByName}</td>
                                                    <td>${convertToShortDate(ajaxAddModel.CategoryDto.Category.ModifiedDate)}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.ModifiedByName}</td>
                                                    <td>${0}</td>
                                                </tr>
                                `;
                            } else {
                                tableRow = `
                        <tr>
                                                    <td>${ajaxAddModel.CategoryDto.Category.ID}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.Name}</td>
                                                    <td>${convertFirstToUpper(ajaxAddModel.CategoryDto.Category.IsActive.toString())}</td>
                                                    <td>${convertFirstToUpper(ajaxAddModel.CategoryDto.Category.IsDeleted.toString())}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.Note}</td>
                                                    <td>${convertToShortDate(ajaxAddModel.CategoryDto.Category.CreatedDate)}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.CreatedByName}</td>
                                                    <td>${convertToShortDate(ajaxAddModel.CategoryDto.Category.ModifiedDate)}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.ModifiedByName}</td>
                                                    <td>${ajaxAddModel.CategoryDto.Category.Articles.$values.length}</td>
                                                </tr>
                                `;
                            }
                            
                            const tableRowObject = $(tableRow);
                            tableRowObject.hide();
                            $('#categoriesTable').append(tableRowObject);
                            tableRowObject.fadeIn(1500);
                            toastr["success"]('Basatili Islem', `${ajaxAddModel.CategoryDto.Message}`);

                        }
                        else {
                            let summaryText = '';
                            $('#validation-summary  ul  li').each(function() {
                                let text = $(this).text();
                                summaryText += `*${text}\n`;
                            });
                            toastr["warning"](summaryText);
                        }
                    });
                });
            //Ajax post islemi
            });
            //Ajax get islemi
            $(document).on('click', '.btn-delete', function (e) {
                e.preventDefault();
                const id = $(this).attr('data-id');
                Swal.fire({
                    title: 'Silmek istediginize emin misniz?',
                    text: "Silinen kategoriyi cop kutusundan geri getirebilirsiniz",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, silmek istiyorum',
                    cancelButtonText:'Hayir, silmek istemiyorum'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            url: '@Url.Action("Remove","Category")',
                            data: {categoryId: id},
                            success: function (data) {
                                const result = jQuery.parseJSON(data);
                                console.log(data);
                                if (result.ResultStatus === 0) {
                                    Swal.fire(
                                        result.Message,
                                        `Cop kutusuna tasindi`,
                                        'success'
                                    );
                                    const tblRow = $(`[name=${id}]`);
                                    tblRow.fadeOut(1500);
                                }
                            },
                            error: function (err) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Beklenmedik bir hata olustu',
                                    text: result.Message,
                                })
                            }
                        })
                    }
                })
            });

        });
    </script>
}
